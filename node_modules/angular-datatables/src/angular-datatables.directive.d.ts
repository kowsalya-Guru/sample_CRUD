/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
/// <reference types="datatables.net" />
import { ElementRef, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';
import { Subject } from 'rxjs';
import { ADTSettings } from './models/settings';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableDirective implements OnDestroy, OnInit {
    private el;
    private vcr;
    private renderer;
    /**
     * The DataTable option you pass to configure your table.
     */
    dtOptions: ADTSettings;
    /**
     * This trigger is used if one wants to trigger manually the DT rendering
     * Useful when rendering angular rendered DOM
     */
    dtTrigger: Subject<any>;
    /**
     * The DataTable instance built by the jQuery library [DataTables](datatables.net).
     *
     * It's possible to execute the [DataTables APIs](https://datatables.net/reference/api/) with
     * this variable.
     */
    dtInstance: Promise<DataTables.Api>;
    private dt;
    constructor(el: ElementRef, vcr: ViewContainerRef, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private displayTable;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DataTableDirective, "[datatable]", never, {
    "dtOptions": "dtOptions";
    "dtTrigger": "dtTrigger";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1kYXRhdGFibGVzLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJhbmd1bGFyLWRhdGF0YWJsZXMuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbC1saW4vYW5ndWxhci1kYXRhdGFibGVzL21hc3Rlci9MSUNFTlNFXG4gKi9cbi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiZGF0YXRhYmxlcy5uZXRcIiAvPlxuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQURUU2V0dGluZ3MgfSBmcm9tICcuL21vZGVscy9zZXR0aW5ncyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVGFibGVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBwcml2YXRlIHZjcjtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSBEYXRhVGFibGUgb3B0aW9uIHlvdSBwYXNzIHRvIGNvbmZpZ3VyZSB5b3VyIHRhYmxlLlxuICAgICAqL1xuICAgIGR0T3B0aW9uczogQURUU2V0dGluZ3M7XG4gICAgLyoqXG4gICAgICogVGhpcyB0cmlnZ2VyIGlzIHVzZWQgaWYgb25lIHdhbnRzIHRvIHRyaWdnZXIgbWFudWFsbHkgdGhlIERUIHJlbmRlcmluZ1xuICAgICAqIFVzZWZ1bCB3aGVuIHJlbmRlcmluZyBhbmd1bGFyIHJlbmRlcmVkIERPTVxuICAgICAqL1xuICAgIGR0VHJpZ2dlcjogU3ViamVjdDxhbnk+O1xuICAgIC8qKlxuICAgICAqIFRoZSBEYXRhVGFibGUgaW5zdGFuY2UgYnVpbHQgYnkgdGhlIGpRdWVyeSBsaWJyYXJ5IFtEYXRhVGFibGVzXShkYXRhdGFibGVzLm5ldCkuXG4gICAgICpcbiAgICAgKiBJdCdzIHBvc3NpYmxlIHRvIGV4ZWN1dGUgdGhlIFtEYXRhVGFibGVzIEFQSXNdKGh0dHBzOi8vZGF0YXRhYmxlcy5uZXQvcmVmZXJlbmNlL2FwaS8pIHdpdGhcbiAgICAgKiB0aGlzIHZhcmlhYmxlLlxuICAgICAqL1xuICAgIGR0SW5zdGFuY2U6IFByb21pc2U8RGF0YVRhYmxlcy5BcGk+O1xuICAgIHByaXZhdGUgZHQ7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHZjcjogVmlld0NvbnRhaW5lclJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgZGlzcGxheVRhYmxlO1xufVxuIl19